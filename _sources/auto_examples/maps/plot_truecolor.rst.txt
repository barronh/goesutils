
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/maps/plot_truecolor.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_maps_plot_truecolor.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_maps_plot_truecolor.py:


Plot Truecolor Approximation
============================

Download one ABI-L2-MCMIPC file from GOES-16 and plot a true color image.

.. GENERATED FROM PYTHON SOURCE LINES 7-16

.. code-block:: Python


    import matplotlib.pyplot as plt
    import goesutils
    from goesutils.style import cmi2geocolor
    from goesutils.proj import getproj
    import pandas as pd
    import xarray as xr
    import pycno








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Prepare a base api object
-------------------------

.. GENERATED FROM PYTHON SOURCE LINES 19-27

.. code-block:: Python


    nav = goesutils.NOAAs3('noaa-goes16')
    # Usually, you would process multiple hours, but here just one
    dates = pd.date_range('2023-09-21 20', '2023-09-21 20', freq='h')
    remotekeys = nav.findfiles(short_name='ABI-L2-MCMIPC', dates=dates)
    # Download only the first file
    localpaths = nav.getfiles(remotekeys[:1])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ABI-L2-MCMIPC/2023/264/20/OR_ABI-L2-MCMIPC-M6_G16_s20232642001172_e20232642003545_c20232642004068.nc




.. GENERATED FROM PYTHON SOURCE LINES 28-30

Open file and covert to RGB
---------------------------

.. GENERATED FROM PYTHON SOURCE LINES 30-35

.. code-block:: Python


    ds = xr.open_dataset(localpaths[0])
    # Convert to RGB
    rgb = cmi2geocolor(ds)








.. GENERATED FROM PYTHON SOURCE LINES 36-38

Define geography objects
------------------------

.. GENERATED FROM PYTHON SOURCE LINES 38-48

.. code-block:: Python


    proj = getproj(ds)
    cno = pycno.cno(proj=proj)

    # calculate the corners of the whole dataset
    # use pixel width to extend centroids to corners
    hdx = (ds.x[-1] - ds.x[0]) / (ds.x.size - 1) / 2
    hdy = (ds.y[-1] - ds.y[0]) / (ds.y.size - 1) / 2
    extent = [ds.x[0] - hdx, ds.x[-1] + hdx, ds.y[-1] + hdy, ds.y[0] - hdy]








.. GENERATED FROM PYTHON SOURCE LINES 49-51

Make a plot with state overlay
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 51-63

.. code-block:: Python


    # Make a plot using standard matplotlib functions
    fig, ax = plt.subplots()
    p = ax.imshow(rgb[::-1], extent=extent, origin='lower')
    ax.set(xticks=[], yticks=[])
    # Defining the extent allows you to plot other geographic information on top
    cno.drawstates(ax=ax, color='white')

    # Show the figure
    plt.show()
    # Or save the figure
    fig.savefig('color.png')



.. image-sg:: /auto_examples/maps/images/sphx_glr_plot_truecolor_001.png
   :alt: plot truecolor
   :srcset: /auto_examples/maps/images/sphx_glr_plot_truecolor_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.12.3/x64/lib/python3.12/site-packages/matplotlib/cm.py:494: RuntimeWarning: invalid value encountered in cast
      xx = (xx * 255).astype(np.uint8)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.146 seconds)


.. _sphx_glr_download_auto_examples_maps_plot_truecolor.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_truecolor.ipynb <plot_truecolor.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_truecolor.py <plot_truecolor.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
